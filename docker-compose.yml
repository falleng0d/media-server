networks:
  mediarr:
    driver: bridge
  transmission:
    name: transmission
    external: true

volumes:
  media:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${MEDIA_DRIVE}
  completed:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${MEDIA_DRIVE}/completed
  animes:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${MEDIA_DRIVE}/Animes
  movies:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${MEDIA_DRIVE}/Movies

services:
  jellyfin:
    image: jellyfin/jellyfin
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - UMASK=${UMASK}
      - TZ=${TZ}
      - JELLYFIN_CACHE_DIR=/var/cache/jellyfin
      - JELLYFIN_CONFIG_DIR=/etc/jellyfin
      - JELLYFIN_DATA_DIR=/var/lib/jellyfin
      - JELLYFIN_LOG_DIR=/var/log/jellyfin
    volumes:
      - /docker/jellyfin/etc:/etc/jellyfin
      - /docker/jellyfin/var-cache:/var/cache/jellyfin
      - /docker/jellyfin/var-lib:/var/lib/jellyfin
      - /docker/jellyfin/var-log:/var/log/jellyfin
      - media:/mnt/media
    devices:
      - /dev/dri/renderD128:/dev/dri/renderD128
    restart: unless-stopped
  bazarr:
    image: lscr.io/linuxserver/bazarr:latest
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - UMASK=${UMASK}
      - TZ=${TZ}
    networks:
      - mediarr
    volumes:
      - /docker/bazarr:/config
      - media:/mnt/media
    ports:
      - 6767:6767
    restart: unless-stopped
    depends_on:
      - sonarr
      - radarr
  jellyseerr:
    image: fallenbagel/jellyseerr:latest
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - UMASK=${UMASK}
      - TZ=${TZ}
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - mediarr
    ports:
      - 5055:5055
    volumes:
      - /docker/jellyseerr:/app/config
    restart: unless-stopped
    depends_on:
      - sonarr
      - radarr
  prowlarr:
    image: linuxserver/prowlarr:latest
    networks:
      - mediarr
    volumes:
      - /docker/prowlarr:/config
    ports:
      - 9696:9696
    restart: unless-stopped
    depends_on:
      - flaresolverr
  jackett:
    image: lscr.io/linuxserver/jackett:latest
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - UMASK=${UMASK}
      - TZ=${TZ}
      - AUTO_UPDATE=true
      - RUN_OPTS=
    networks:
      - mediarr
    volumes:
      - /docker/jackett:/config
      - completed:/downloads
    ports:
      - 9117:9117
    restart: unless-stopped
  flaresolverr:
    image: ghcr.io/flaresolverr/flaresolverr:latest
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - UMASK=${UMASK}
      - TZ=${TZ}
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - LOG_HTML=${LOG_HTML:-false}
      - CAPTCHA_SOLVER=${CAPTCHA_SOLVER:-none}
    networks:
      - mediarr
    restart: unless-stopped
  radarr:
    image: lscr.io/linuxserver/radarr:latest
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - UMASK=${UMASK}
      - TZ=${TZ}
    networks:
      - mediarr
      - transmission
    volumes:
      - /docker/radarr:/config
      - media:/mnt/media
      - completed:/mnt/downloads
    ports:
      - 7878:7878
    restart: unless-stopped
    depends_on:
      - prowlarr
      - jackett
      - jellyfin
  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - UMASK=${UMASK}
      - TZ=${TZ}
    networks:
      - mediarr
      - transmission
    volumes:
      - /docker/sonarr:/config
      - media:/mnt/media
      - completed:/mnt/downloads
    depends_on:
      - prowlarr
      - jackett
      - jellyfin
    ports:
      - 8989:8989
    restart: unless-stopped
  shoko:
    image: ghcr.io/shokoanime/server:latest
    shm_size: 256m
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - UMASK=${UMASK}
      - TZ=${TZ}
    networks:
      - mediarr
    volumes:
      - /docker/shoko:/home/shoko/.shoko
      - animes:/mnt/anime
      - media:/mnt/import
    ports:
      - 8111:8111
    restart: unless-stopped
  homarr:
    container_name: homarr
    image: ghcr.io/homarr-labs/homarr:latest
    restart: unless-stopped
    networks:
      - mediarr
      - transmission
    extra_hosts:
      - "host.docker.internal:host-gateway"
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - UMASK=${UMASK}
      - TZ=${TZ}
      - SECRET_ENCRYPTION_KEY=${SECRET_ENCRYPTION_KEY}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /docker/homarr/appdata:/appdata
    ports:
      - 7575:7575